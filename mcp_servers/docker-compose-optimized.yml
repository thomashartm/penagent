#
# Optimized MCP Server Docker Compose Orchestration
#
# This version uses a combined ZAP container (daemon + MCP server) instead of two separate containers.
#
# Services:
#   - kali:      Kali Linux container with MCP server for shell/pentest tools (kali.Dockerfile, port 8001)
#   - websearch: Web search MCP server (websearch.Dockerfile, port 8002)
#   - discovery: Lightweight web app discovery/spidering MCP server (discovery.Dockerfile, port 8003)
#   - rag:       RAG knowledge base MCP server (rag.Dockerfile, port 8004)
#   - zap:       Combined ZAP daemon + MCP server (zap_combined.Dockerfile, ports 8005, 8090)
#   - playwright: Playwright browser automation (playwright.Dockerfile)
#
services:
  playwright:
    build:
      context: .
      dockerfile: playwright.Dockerfile  # Browser automation (not MCP)
    container_name: pentest-playwright
    working_dir: /app
    tty: true
    volumes:
      - ../outputs:/app/outputs

  zap:
    build:
      context: .
      dockerfile: zap_combined.Dockerfile  # Combined ZAP daemon + MCP server
    container_name: pentest-zap-combined
    ports:
      - "8005:8005"  # MCP ZAP server
      - "8090:8090"  # ZAP API/UI (for debugging/access)
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kali:
    build:
      context: .
      dockerfile: kali.Dockerfile  # Kali MCP server (shell/pentest tools)
    container_name: kali
    ports:
      - "8001:8001"  # MCP Kali server
    networks:
      - mcp-network
    restart: unless-stopped

  websearch:
    build:
      context: .
      dockerfile: websearch.Dockerfile  # Web search MCP server
    container_name: mcp-websearch
    ports:
      - "8002:8002"  # MCP WebSearch server
    networks:
      - mcp-network
    restart: unless-stopped

  discovery:
    build:
      context: .
      dockerfile: discovery.Dockerfile  # Lightweight web app discovery/spidering MCP server
    container_name: mcp-discovery
    ports:
      - "8003:8003"  # MCP Discovery server
    networks:
      - mcp-network
    restart: unless-stopped

  rag:
    build:
      context: .
      dockerfile: rag.Dockerfile  # RAG knowledge base MCP server
    container_name: mcp-rag
    ports:
      - "8004:8004"  # MCP RAG server
    networks:
      - mcp-network
    restart: unless-stopped

networks:
  mcp-network:
    driver: bridge 