#
# MCP Server Docker Compose Orchestration
#
# This file defines all MCP servers and supporting containers for the Pentest-Agent architecture.
# Each service is documented with its purpose and the Dockerfile it uses.
#
# Services:
#   - kali:      Kali Linux container with MCP server for shell/pentest tools (kali.Dockerfile, port 8001)
#   - websearch: Web search MCP server (websearch.Dockerfile, port 8002)
#   - discovery: Lightweight web app discovery/spidering MCP server (discovery.Dockerfile, port 8003)
#   - rag:       RAG knowledge base MCP server (rag.Dockerfile, port 8004)
#   - zap:       OWASP ZAP daemon (official image, port 8090, internal use)
#   - zap-mcp:   MCP server for ZAP API orchestration (zap.Dockerfile, port 8005)
#   - playwright: Playwright browser automation (playwright.Dockerfile)
#
services:
  playwright:
    build:
      context: .
      dockerfile: playwright.Dockerfile  # Browser automation (not MCP)
    container_name: pentest-playwright
    working_dir: /app
    tty: true
    volumes:
      - ../outputs:/app/outputs

  zap-mcp:
    build:
      context: .
      dockerfile: zap.Dockerfile  # MCP server for ZAP API
    container_name: mcp-zap
    ports:
      - "8005:8005"  # MCP ZAP server
    depends_on:
      zap:
        condition: service_healthy
    networks:
      - mcp-network
    environment:
      - ZAP_API_BASE=http://zap:8090
    restart: unless-stopped

  kali:
    build:
      context: .
      dockerfile: kali.Dockerfile  # Kali MCP server (shell/pentest tools)
    container_name: kali
    ports:
      - "8001:8001"  # MCP Kali server
    networks:
      - mcp-network
    restart: unless-stopped

  websearch:
    build:
      context: .
      dockerfile: websearch.Dockerfile  # Web search MCP server
    container_name: mcp-websearch
    ports:
      - "8002:8002"  # MCP WebSearch server
    networks:
      - mcp-network
    restart: unless-stopped

  discovery:
    build:
      context: .
      dockerfile: discovery.Dockerfile  # Lightweight web app discovery/spidering MCP server
    container_name: mcp-discovery
    ports:
      - "8003:8003"  # MCP Discovery server
    networks:
      - mcp-network
    restart: unless-stopped

  rag:
    build:
      context: .
      dockerfile: rag.Dockerfile  # RAG knowledge base MCP server
    container_name: mcp-rag
    ports:
      - "8004:8004"  # MCP RAG server
    networks:
      - mcp-network
    restart: unless-stopped

networks:
  mcp-network:
    driver: bridge 